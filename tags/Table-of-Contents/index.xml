<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Table of Contents on Cláudio Silva's Blog</title><link>https://claudioessilva.eu/tags/Table-of-Contents/</link><description>Recent content in Table of Contents on Cláudio Silva's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 18 Sep 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://claudioessilva.eu/tags/Table-of-Contents/index.xml" rel="self" type="application/rss+xml"/><item><title>Generate Markdown Table of Contents based on files within a folder with PowerShell</title><link>https://claudioessilva.eu/2017/09/18/Generate-Markdown-Table-of-Contents-based-on-files-within-a-folder-with-PowerShell/</link><pubDate>Mon, 18 Sep 2017 00:00:00 +0000</pubDate><guid>https://claudioessilva.eu/2017/09/18/Generate-Markdown-Table-of-Contents-based-on-files-within-a-folder-with-PowerShell/</guid><description>Last week I was talking with Constantine Kokkinos ( b | t ) about generating a Table Of Contents (TOC) for a GitHub repository.
He wrote a cool blog post - Generating Tables of Contents for Github Projects with PowerShell - about it and I will write this one with a different problem/solution.
Context I’m working on a new project (news coming soon) that uses a GitHub repository and I expect to have a big number of files within a specific folder.</description></item></channel></rss>