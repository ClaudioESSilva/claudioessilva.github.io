<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WITH ENCRYPTION on Cláudio Silva's Blog</title><link>https://claudioessilva.eu/tags/WITH-ENCRYPTION/</link><description>Recent content in WITH ENCRYPTION on Cláudio Silva's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://claudioessilva.eu/tags/WITH-ENCRYPTION/index.xml" rel="self" type="application/rss+xml"/><item><title>Recover database encrypted modules code with dbatools</title><link>https://claudioessilva.eu/2020/09/22/Recover-database-encrypted-modules-code-with-dbatools/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://claudioessilva.eu/2020/09/22/Recover-database-encrypted-modules-code-with-dbatools/</guid><description>This article was initially posted on SQLServerCentral @ 2020-08-18. It was interesting some comments I read about it, mainly why people still use WITH ENCRYPTION when it&amp;rsquo;s simple to overcome this when we have the right permissions.
SQL Server offers an option to encrypt the code of your modules when using the WITH ENCRYPTION syntax. This allows to hide/obfuscate the modules&amp;rsquo; code and thus keep away from prying eyes. It&amp;rsquo;s often used to protect business rules since it allows you to protect some intellectual property.</description></item></channel></rss>