<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Export on Cláudio Silva's Blog</title><link>https://claudioessilva.eu/tags/Export/</link><description>Recent content in Export on Cláudio Silva's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 31 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://claudioessilva.eu/tags/Export/index.xml" rel="self" type="application/rss+xml"/><item><title>Generate SQL Server Role Member Reports using dbatools and ImportExcel PowerShell modules</title><link>https://claudioessilva.eu/2020/07/31/Generate-SQL-Server-Role-Member-Reports-using-dbatools-and-ImportExcel-PowerShell-modules/</link><pubDate>Fri, 31 Jul 2020 00:00:00 +0000</pubDate><guid>https://claudioessilva.eu/2020/07/31/Generate-SQL-Server-Role-Member-Reports-using-dbatools-and-ImportExcel-PowerShell-modules/</guid><description>This was initial posted on SQL Server Central articles.
As one of dbatools&amp;rsquo; first members, I&amp;rsquo;ve been using it for years and it&amp;rsquo;s really my goto tool. This task was no different!
Today&amp;rsquo;s tip and trick using dbatools is about generating an Excel workbook that contains lists of SQL Server roles and its members.
The Usefulness of these Reports These reports are especially useful when performing tech-refreshes (migrating from an old version to a newer one) and you want to do some housekeeping.</description></item><item><title>Backup your SQL instances configurations to GIT with dbatools - Part 2 - Add parallelism</title><link>https://claudioessilva.eu/2020/06/04/Backup-your-SQL-instances-configurations-to-GIT-with-dbatools-Part-2-Add-parallelism/</link><pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate><guid>https://claudioessilva.eu/2020/06/04/Backup-your-SQL-instances-configurations-to-GIT-with-dbatools-Part-2-Add-parallelism/</guid><description>We have seen how we can export and save the results to a folder and commit them to a GIT repository on my last blog post Backup your SQL instances configurations to GIT with dbatools – Part 1. At the end of that post, I have mentioned that I would write about how we can lower down the execution times of our script by leveraging on parallelism.
Going parallel When we need to manage dozens of servers/instances, even with automated scripts sometimes we would like that our script finishes faster.</description></item><item><title>Backup your SQL instances configurations to GIT with dbatools - Part 1</title><link>https://claudioessilva.eu/2020/06/02/Backup-your-SQL-instances-configurations-to-GIT-with-dbatools-Part-1/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://claudioessilva.eu/2020/06/02/Backup-your-SQL-instances-configurations-to-GIT-with-dbatools-Part-1/</guid><description>Today I want to share how I&amp;rsquo;m keeping a copy of instances&amp;rsquo; configurations using dbatools.
Chrissy LeMaire (B | T) wrote about it before on the Simplifying disaster recovery with dbatools blog post. In this post, I will add one step and save the output on a GIT repository.
Pre-requirements You need a GIT repository GIT tools installed on the server where you are running the script so you can commit your changes dbatools A list or a place to get all instances that you want to run the export Preparation Git repository Clone your repository to a location where dbatools can write to.</description></item><item><title>Replicate permissions to new Login/User with dbatools</title><link>https://claudioessilva.eu/2020/05/28/Replicate-permissions-to-new-Login/User-with-dbatools/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://claudioessilva.eu/2020/05/28/Replicate-permissions-to-new-Login/User-with-dbatools/</guid><description>Continuing to share tips and tricks using dbatools like the Refresh databases that belongs to availability group using dbatools posted a few days ago, today I will share a way to export the permissions of a login/user at instance/database level and apply them to a new login/user.
The typical request Client: &amp;ldquo;We have a new colleague, can you please grant them the exact same permissions I have?!&amp;rdquo;
A quick note/suggestion that may help minimize your work: If we are talking about a Windows Login, please suggest the use of AD groups to help you (so that you don&amp;rsquo;t need to do this process) and also them (they don&amp;rsquo;t need to make this request).</description></item></channel></rss>